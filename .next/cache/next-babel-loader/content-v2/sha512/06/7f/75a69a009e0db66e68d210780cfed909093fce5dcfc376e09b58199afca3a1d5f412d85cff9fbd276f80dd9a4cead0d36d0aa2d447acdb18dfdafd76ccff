{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\D-Mail\\\\Components\\\\Phonebook.js\";\nimport React, { useState } from 'react';\nimport web3 from '../Ethereum/web3';\nimport mail from '../Ethereum/mail';\nimport Layout from '../Components/Layout';\nimport { Form, Button, Input, Grid, List, Menu, Label, Header, Segment, Icon } from 'semantic-ui-react';\nimport ipfs from '../ipfs';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nexport default function Phonebook() {\n  const {\n    0: Name,\n    1: setName\n  } = useState([]);\n  const {\n    0: Address,\n    1: setAddress\n  } = useState([]);\n  const {\n    0: Book,\n    1: setBook\n  } = useState(false);\n  const {\n    0: Addresslist,\n    1: setAddresslist\n  } = useState([]);\n\n  const myaddressBook = async event => {\n    event.preventDefault();\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts[0]);\n      const addressbook = await mail.methods.myaddressBook(accounts[0]).call();\n      console.log(addressbook);\n      setAddresslist(addressbook);\n    } catch (error) {}\n  };\n\n  const addtoBook = async event => {\n    event.preventDefault();\n    setBook(true);\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts[0]);\n      await mail.methods.addToAddressBook(Name, Address).send({\n        from: accounts[0],\n        gas: '1000000'\n      });\n    } catch (error) {}\n\n    setBook(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid.Column, {\n    width: 12,\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Add to PhoneBook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Name\",\n        value: Name,\n        onChange: event => setName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Address\",\n        value: Address,\n        onChange: event => setAddress(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        loading: Book,\n        floated: \"right\",\n        onClick: addtoBook,\n        children: \"Add to PhoneBook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        secondary: true,\n        floated: \"right\",\n        onClick: myaddressBook,\n        children: \"My AddressBook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 14\n    }, this), Addresslist.map(add => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          as: \"h4\",\n          attached: \"top\",\n          block: true,\n          children: add.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Segment, {\n          attached: true,\n          children: [add.addressHash, /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n            text: add.addressHash,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              icon: true,\n              compact: true,\n              floated: \"right\",\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                size: \"large\",\n                fitted: true,\n                right: true,\n                name: \"copy outline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 22\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 14\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/user/Desktop/D-Mail/Components/Phonebook.js"],"names":["React","useState","web3","mail","Layout","Form","Button","Input","Grid","List","Menu","Label","Header","Segment","Icon","ipfs","CopyToClipboard","Phonebook","Name","setName","Address","setAddress","Book","setBook","Addresslist","setAddresslist","myaddressBook","event","preventDefault","accounts","eth","getAccounts","console","log","addressbook","methods","call","error","addtoBook","addToAddressBook","send","from","gas","target","value","map","add","name","addressHash"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,KAAtB,EAA6BC,IAA7B,EAAmCC,IAAnC,EAAwCC,IAAxC,EAA6CC,KAA7C,EAAmDC,MAAnD,EAA2DC,OAA3D,EAAoEC,IAApE,QAA+E,mBAA/E;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAAQC,eAAR,QAA8B,yBAA9B;AAEA,eAAe,SAASC,SAAT,GAAqB;AAChC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAMC;AAAN,MAAiBlB,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM;AAAA,OAACmB,OAAD;AAAA,OAASC;AAAT,MAAuBpB,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM;AAAA,OAACqB,IAAD;AAAA,OAAMC;AAAN,MAAiBtB,QAAQ,CAAC,KAAD,CAA/B;AACA,QAAM;AAAA,OAACuB,WAAD;AAAA,OAAaC;AAAb,MAA+BxB,QAAQ,CAAC,EAAD,CAA7C;;AAEA,QAAMyB,aAAa,GAAG,MAAMC,KAAN,IAAgB;AAClCA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAG;AACC,YAAMC,QAAQ,GAAG,MAAM3B,IAAI,CAAC4B,GAAL,CAASC,WAAT,EAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAAC,CAAD,CAApB;AACA,YAAMK,WAAW,GAAG,MAAM/B,IAAI,CAACgC,OAAL,CAAaT,aAAb,CAA2BG,QAAQ,CAAC,CAAD,CAAnC,EAAwCO,IAAxC,EAA1B;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYC,WAAZ;AACAT,MAAAA,cAAc,CAACS,WAAD,CAAd;AACH,KAND,CAME,OAAMG,KAAN,EAAY,CAEb;AACJ,GAXD;;AAaA,QAAMC,SAAS,GAAG,MAAOX,KAAP,IAAiB;AAC/BA,IAAAA,KAAK,CAACC,cAAN;AACAL,IAAAA,OAAO,CAAC,IAAD,CAAP;;AACA,QAAI;AACA,YAAMM,QAAQ,GAAG,MAAM3B,IAAI,CAAC4B,GAAL,CAASC,WAAT,EAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAAC,CAAD,CAApB;AACA,YAAM1B,IAAI,CAACgC,OAAL,CAAaI,gBAAb,CAA8BrB,IAA9B,EAAoCE,OAApC,EAA6CoB,IAA7C,CAAkD;AACpDC,QAAAA,IAAI,EAAEZ,QAAQ,CAAC,CAAD,CADsC;AAEpDa,QAAAA,GAAG,EAAE;AAF+C,OAAlD,CAAN;AAIH,KAPD,CAOE,OAAOL,KAAP,EAAc,CAEf;;AACDd,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAdD;;AAgBA,sBAES,QAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,EAApB;AAAA,4BACA,QAAC,IAAD;AAAA,8BACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADP,eAEO,QAAC,KAAD;AACI,QAAA,WAAW,EAAC,MADhB;AAEI,QAAA,KAAK,EAAIL,IAFb;AAGI,QAAA,QAAQ,EAAIS,KAAK,IAAIR,OAAO,CAACQ,KAAK,CAACgB,MAAN,CAAaC,KAAd;AAHhC;AAAA;AAAA;AAAA;AAAA,cAFP,eAQO,QAAC,KAAD;AACI,QAAA,WAAW,EAAC,SADhB;AAEI,QAAA,KAAK,EAAIxB,OAFb;AAGI,QAAA,QAAQ,EAAIO,KAAK,IAAIN,UAAU,CAAEM,KAAK,CAACgB,MAAN,CAAaC,KAAf;AAHnC;AAAA;AAAA;AAAA;AAAA,cARP,eAaO,QAAC,MAAD;AAAQ,QAAA,OAAO,MAAf;AAAgB,QAAA,OAAO,EAAEtB,IAAzB;AAA+B,QAAA,OAAO,EAAC,OAAvC;AAA+C,QAAA,OAAO,EAAEgB,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbP,eAcO;AAAA;AAAA;AAAA;AAAA,cAdP,eAeO,QAAC,MAAD;AAAQ,QAAA,SAAS,MAAjB;AAAkB,QAAA,OAAO,EAAC,OAA1B;AAAmC,QAAA,OAAO,EAAEZ,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfP,eAgBO;AAAA;AAAA;AAAA;AAAA,cAhBP;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAmBIF,WAAW,CAACqB,GAAZ,CAAiBC,GAAD,IAAS;AAC1B,0BACI;AAAA,gCACA,QAAC,MAAD;AAAQ,UAAA,EAAE,EAAC,IAAX;AAAgB,UAAA,QAAQ,EAAC,KAAzB;AAA+B,UAAA,KAAK,MAApC;AAAA,oBACFA,GAAG,CAACC;AADF;AAAA;AAAA;AAAA;AAAA,gBADA,eAIJ,QAAC,OAAD;AAAS,UAAA,QAAQ,MAAjB;AAAA,qBAAmBD,GAAG,CAACE,WAAvB,eACA,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAEF,GAAG,CAACE,WAA3B;AAAA,mCACA,QAAC,MAAD;AAAQ,cAAA,IAAI,MAAZ;AAAa,cAAA,OAAO,MAApB;AAAqB,cAAA,OAAO,EAAC,OAA7B;AAAA,qCACK,QAAC,IAAD;AAAM,gBAAA,IAAI,EAAC,OAAX;AAAmB,gBAAA,MAAM,MAAzB;AAA0B,gBAAA,KAAK,MAA/B;AAAgC,gBAAA,IAAI,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBADA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJI;AAAA,sBADJ;AAcE,KAfD,CAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFT;AA0CH","sourcesContent":["import React,{useState} from 'react'\r\nimport web3 from '../Ethereum/web3';\r\nimport mail from '../Ethereum/mail';\r\nimport Layout from '../Components/Layout';\r\nimport {Form, Button, Input, Grid, List,Menu,Label,Header, Segment, Icon} from 'semantic-ui-react';\r\nimport ipfs from '../ipfs';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\n\r\nexport default function Phonebook() {\r\n    const [Name,setName] = useState([]);\r\n    const [Address,setAddress] = useState([]);\r\n    const [Book,setBook] = useState(false);\r\n    const [Addresslist,setAddresslist] = useState([]);\r\n\r\n    const myaddressBook = async(event) => {\r\n        event.preventDefault();\r\n        try{\r\n            const accounts = await web3.eth.getAccounts();\r\n            console.log(accounts[0]);\r\n            const addressbook = await mail.methods.myaddressBook(accounts[0]).call();\r\n            console.log(addressbook);\r\n            setAddresslist(addressbook);\r\n        } catch(error){\r\n\r\n        }\r\n    }\r\n\r\n    const addtoBook = async (event) => {\r\n        event.preventDefault();\r\n        setBook(true);\r\n        try {\r\n            const accounts = await web3.eth.getAccounts();\r\n            console.log(accounts[0]);\r\n            await mail.methods.addToAddressBook(Name, Address).send({\r\n                from: accounts[0],\r\n                gas: '1000000'\r\n            })\r\n        } catch (error) {\r\n            \r\n        }\r\n        setBook(false);\r\n    }\r\n\r\n    return (\r\n        \r\n             <Grid.Column width={12}>\r\n             <Form>\r\n                    <label>Add to PhoneBook</label>\r\n                    <Input \r\n                        placeholder=\"Name\"\r\n                        value = {Name}\r\n                        onChange = {event => setName(event.target.value)}\r\n                    />\r\n                       \r\n                    <Input \r\n                        placeholder=\"Address\"\r\n                        value = {Address}\r\n                        onChange = {event => setAddress( event.target.value)}\r\n                    />\r\n                    <Button primary loading={Book} floated=\"right\" onClick={addtoBook}>Add to PhoneBook</Button>\r\n                    <br/>\r\n                    <Button secondary floated=\"right\"  onClick={myaddressBook}>My AddressBook</Button>\r\n                    <br/>\r\n                </Form>\r\n                {Addresslist.map((add) => {\r\n                return (\r\n                    <>\r\n                    <Header as='h4' attached='top' block>\r\n                 {add.name}\r\n                </Header>\r\n                <Segment attached>{add.addressHash}\r\n                <CopyToClipboard text={add.addressHash}>\r\n                <Button icon compact floated=\"right\">\r\n                     <Icon size=\"large\" fitted right name=\"copy outline\"/>\r\n                </Button>\r\n                </CopyToClipboard>\r\n                </Segment>\r\n                </>\r\n                    )                \r\n                 })}\r\n\r\n                \r\n                </Grid.Column> \r\n       \r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/user/Desktop/D-Mail/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/user/Desktop/D-Mail/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\D-Mail\\\\Components\\\\Phonebook.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport web3 from '../Ethereum/web3';\nimport mail from '../Ethereum/mail';\nimport Layout from '../Components/Layout';\nimport { Form, Button, Input, Grid, List, Menu, Label, Header, Segment, Icon } from 'semantic-ui-react';\nimport ipfs from '../ipfs';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nexport default function Phonebook() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      Name = _useState[0],\n      setName = _useState[1];\n\n  var _useState2 = useState([]),\n      Address = _useState2[0],\n      setAddress = _useState2[1];\n\n  var _useState3 = useState(false),\n      Book = _useState3[0],\n      setBook = _useState3[1];\n\n  var _useState4 = useState([]),\n      Addresslist = _useState4[0],\n      setAddresslist = _useState4[1];\n\n  var myaddressBook = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var accounts, addressbook;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              _context.prev = 1;\n              _context.next = 4;\n              return web3.eth.getAccounts();\n\n            case 4:\n              accounts = _context.sent;\n              console.log(accounts[0]);\n              _context.next = 8;\n              return mail.methods.myaddressBook(accounts[0]).call();\n\n            case 8:\n              addressbook = _context.sent;\n              console.log(addressbook);\n              setAddresslist(addressbook);\n              _context.next = 15;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](1);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 13]]);\n    }));\n\n    return function myaddressBook(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var addtoBook = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n      var accounts;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              event.preventDefault();\n              setBook(true);\n              _context2.prev = 2;\n              _context2.next = 5;\n              return web3.eth.getAccounts();\n\n            case 5:\n              accounts = _context2.sent;\n              console.log(accounts[0]);\n              _context2.next = 9;\n              return mail.methods.addToAddressBook(Name, Address).send({\n                from: accounts[0],\n                gas: '1000000'\n              });\n\n            case 9:\n              _context2.next = 13;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](2);\n\n            case 13:\n              setBook(false);\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 11]]);\n    }));\n\n    return function addtoBook(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(Grid.Column, {\n    width: 12,\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Add to PhoneBook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Name\",\n        value: Name,\n        onChange: function onChange(event) {\n          return setName(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Address\",\n        value: Address,\n        onChange: function onChange(event) {\n          return setAddress(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        loading: Book,\n        floated: \"right\",\n        onClick: addtoBook,\n        children: \"Add to PhoneBook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        secondary: true,\n        floated: \"right\",\n        onClick: myaddressBook,\n        children: \"My AddressBook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 14\n    }, this), Addresslist.map(function (add) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          as: \"h4\",\n          attached: \"top\",\n          block: true,\n          children: add.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Segment, {\n          attached: true,\n          children: [add.addressHash, /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n            text: add.addressHash,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              icon: true,\n              compact: true,\n              floated: \"right\",\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                size: \"large\",\n                fitted: true,\n                right: true,\n                name: \"copy outline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 22\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, _this)]\n      }, void 0, true);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 14\n  }, this);\n}\n\n_s(Phonebook, \"otsius0E+uvwAXov+wa7b4glTtU=\");\n\n_c = Phonebook;\n\nvar _c;\n\n$RefreshReg$(_c, \"Phonebook\");","map":{"version":3,"sources":["C:/Users/user/Desktop/D-Mail/Components/Phonebook.js"],"names":["React","useState","web3","mail","Layout","Form","Button","Input","Grid","List","Menu","Label","Header","Segment","Icon","ipfs","CopyToClipboard","Phonebook","Name","setName","Address","setAddress","Book","setBook","Addresslist","setAddresslist","myaddressBook","event","preventDefault","eth","getAccounts","accounts","console","log","methods","call","addressbook","addtoBook","addToAddressBook","send","from","gas","target","value","map","add","name","addressHash"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\nimport web3 from '../Ethereum/web3';\r\nimport mail from '../Ethereum/mail';\r\nimport Layout from '../Components/Layout';\r\nimport {Form, Button, Input, Grid, List,Menu,Label,Header, Segment, Icon} from 'semantic-ui-react';\r\nimport ipfs from '../ipfs';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\n\r\nexport default function Phonebook() {\r\n    const [Name,setName] = useState([]);\r\n    const [Address,setAddress] = useState([]);\r\n    const [Book,setBook] = useState(false);\r\n    const [Addresslist,setAddresslist] = useState([]);\r\n\r\n    const myaddressBook = async(event) => {\r\n        event.preventDefault();\r\n        try{\r\n            const accounts = await web3.eth.getAccounts();\r\n            console.log(accounts[0]);\r\n            const addressbook = await mail.methods.myaddressBook(accounts[0]).call();\r\n            console.log(addressbook);\r\n            setAddresslist(addressbook);\r\n        } catch(error){\r\n\r\n        }\r\n    }\r\n\r\n    const addtoBook = async (event) => {\r\n        event.preventDefault();\r\n        setBook(true);\r\n        try {\r\n            const accounts = await web3.eth.getAccounts();\r\n            console.log(accounts[0]);\r\n            await mail.methods.addToAddressBook(Name, Address).send({\r\n                from: accounts[0],\r\n                gas: '1000000'\r\n            })\r\n        } catch (error) {\r\n            \r\n        }\r\n        setBook(false);\r\n    }\r\n\r\n    return (\r\n        \r\n             <Grid.Column width={12}>\r\n             <Form>\r\n                    <label>Add to PhoneBook</label>\r\n                    <Input \r\n                        placeholder=\"Name\"\r\n                        value = {Name}\r\n                        onChange = {event => setName(event.target.value)}\r\n                    />\r\n                       \r\n                    <Input \r\n                        placeholder=\"Address\"\r\n                        value = {Address}\r\n                        onChange = {event => setAddress( event.target.value)}\r\n                    />\r\n                    <Button primary loading={Book} floated=\"right\" onClick={addtoBook}>Add to PhoneBook</Button>\r\n                    <br/>\r\n                    <Button secondary floated=\"right\"  onClick={myaddressBook}>My AddressBook</Button>\r\n                    <br/>\r\n                </Form>\r\n                {Addresslist.map((add) => {\r\n                return (\r\n                    <>\r\n                    <Header as='h4' attached='top' block>\r\n                 {add.name}\r\n                </Header>\r\n                <Segment attached>{add.addressHash}\r\n                <CopyToClipboard text={add.addressHash}>\r\n                <Button icon compact floated=\"right\">\r\n                     <Icon size=\"large\" fitted right name=\"copy outline\"/>\r\n                </Button>\r\n                </CopyToClipboard>\r\n                </Segment>\r\n                </>\r\n                    )                \r\n                 })}\r\n\r\n                \r\n                </Grid.Column> \r\n       \r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}